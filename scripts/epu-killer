#!/usr/bin/env python
# Copyright 2013 University of Chicago

import gevent.monkey ; gevent.monkey.patch_all()

import logging
import traceback

USAGE="""
Command line tool for killing nodes launched by the provisioner

Must be run from the top directory (./scripts/epu-killer)

usage: ./scripts/epu-killer /path/to/messaging.yml [node_ids]

messaging.yml: messaging configuration file parsable by epu.util

node_ids: a list of all node_ids that should be terminated (separated by
          spaces). If omitted, all are terminated.

"""

import sys

from epu.dashiproc.provisioner import ProvisionerClient
import epu.util
import dashi.bootstrap as bootstrap

PROVISIONER_TOPIC = "provisioner"
ERROR_STATUS = 4
OK_STATUS = 0

def main(messaging_conf, *args):
    logging.basicConfig(level=logging.DEBUG)

    nodes = args

    
    CFG = bootstrap.configure([messaging_conf])
    try:
        dashi = bootstrap.dashi_connect(PROVISIONER_TOPIC, CFG=CFG)
        client = ProvisionerClient(dashi)
    except Exception, e:
        print "Problem connecting to dashi %s" % e
        sys.exit(ERROR_STATUS)

    try:
        if nodes:
            client.terminate_nodes(list(nodes))
        else:
            client.terminate_all(rpcwait=True)
    except Exception, e:
        print "Problem terminating nodes %s" % e
        sys.exit(ERROR_STATUS)

    sys.exit(OK_STATUS)

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print USAGE
        sys.exit(64)
    args = sys.argv[1:]
    main(*args)
